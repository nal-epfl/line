## Creating virtual Ethernet interfaces (i.e. have multiple MAC addresses for the same physical interface)
#
# The subnets must be partitioned at the IP level so that there is no overlap.
# Applications just need to connect to the remote IP address (and optionally bind the the correct local IP address) and
# the traffic will be sent through the correct interface.

* Setup:

# Machine 1:

# Create virtual NICs:
# Note: if you want to have traffic between subnets, remove mode private; but make sure you have the MAC address you
# expect in the frames.
ip link add link eth2 name mac1 address 12:34:0a:00:00:00 type macvlan mode private
ip link add link eth2 name mac2 address 12:34:0a:00:00:02 type macvlan mode private

# Add static ARP entries for the IPs of the other machine(s), to make sure packets are forwarded through macX and not
# eth2:

ip neigh add 10.0.0.1 lladdr 12:34:0a:00:00:01 dev mac1
ip neigh add 10.0.0.3 lladdr 12:34:0a:00:00:03 dev mac2

# Bring them up:

ip link set up mac1
ip link set up mac2

# Check NICs:

ip -o link

# Assign IPs:

ip addr add 10.0.0.0/31 dev mac1
ip addr add 10.0.0.2/31 dev mac2

# Check IPs:

ip -o -4 addr
ip route


# Machine 2:

ip link add link eth2 name mac1 address 12:34:0a:00:00:01 type macvlan mode private
ip link add link eth2 name mac2 address 12:34:0a:00:00:03 type macvlan mode private
ip neigh add 10.0.0.0 lladdr 12:34:0a:00:00:00 dev mac1
ip neigh add 10.0.0.2 lladdr 12:34:0a:00:00:02 dev mac2
ip link set up mac1
ip link set up mac2
ip addr add 10.0.0.1/31 dev mac1
ip addr add 10.0.0.3/31 dev mac2


* Test:

# Machine 1

ping 10.0.0.1
ping 10.0.0.3

# Check the ARP table:
ip neigh


* Cleanup:

# Machine 1:

ip link del link eth2 dev mac1
ip link del link eth2 dev mac2
ip neigh del 10.0.0.1 lladdr 12:34:0a:00:00:01 dev mac1
ip neigh del 10.0.0.3 lladdr 12:34:0a:00:00:03 dev mac2
ip neigh flush all

# Machine 2:

ip link del link eth2 dev mac1
ip link del link eth2 dev mac2
ip neigh del 10.0.0.0 lladdr 12:34:0a:00:00:00 dev mac1
ip neigh del 10.0.0.2 lladdr 12:34:0a:00:00:02 dev mac2
ip neigh flush all


## Creating virtual IP interfaces (i.e. have one MAC address and multiple IP addresses for the same physical interface)
#
# The subnets must be partitioned at the IP level so that there is no overlap.
# Applications must connect to the remote IP address and must also bind the the correct local IP address so that the
# traffic will be sent through the correct interface.

* Setup:

# Machine 1:

ip link set up eth2

# Check NICs:

ip -o link

# Assign IPs:

ip addr add 10.0.0.0/31 dev eth2
ip addr add 10.0.0.2/31 dev eth2

# Check IPs:

ip -o -4 addr
ip route


# Machine 2:
ip link set up eth2
ip addr add 10.0.0.1/31 dev eth2
ip addr add 10.0.0.3/31 dev eth2


* Test:

# Machine 1

ping 10.0.0.1
ping 10.0.0.3

# Check the ARP table:
ip neigh | grep REACH


* Cleanup:

# Machine 1

ip addr del 10.0.0.0/31 dev eth2
ip addr del 10.0.0.2/31 dev eth2

# Machine 2

ip addr del 10.0.0.1/31 dev eth2
ip addr del 10.0.0.3/31 dev eth2
